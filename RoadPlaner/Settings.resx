<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>